paths:
  /auth/register:
    post:
      tags: ['Autenticação']
      summary: Cadastrar usuário
      description: 'Rota responsável por realizar o cadastro do usuário'
      operationId: auth/register
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: 'Operação realizada com sucesso'
  /auth/login:
    post:
      tags: ['Autenticação']
      summary: Realizar login
      description: 'Rota responsável por realizar login'
      operationId: auth/login
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: 'Operação realizada com sucesso'
  /auth/logout:
    post:
      tags: ['Autenticação']
      summary: Realizar logout
      description: 'Rota responsável por realizar logout'
      operationId: auth/logout
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Logout'
      responses:
        '200':
          description: 'Operação realizada com sucesso'
      security:
        - bearer: []
  /auth/refresh-token:
    post:
      tags: ['Autenticação']
      summary: Atualizar token de acesso
      description: 'Rota responsável por atualizar o token de acesso'
      operationId: auth/refresh-token
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: 'Operação realizada com sucesso'
      security:
        - bearer: []
components:
  schemas:
    Register:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
      example:
        name: 'Nome Usuário'
        email: 'email@email.com'
        password: '12345678'
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      example:
        email: 'email@email.com'
        password: '12345678'
    Logout:
      type: object
      properties:
        email:
          type: string
      required:
        - email
      example:
        email: 'email@email.com'
    RefreshToken:
      type: object
      properties:
        refresh-token:
          type: string
      required:
        - refresh-token:
      example:
        email: '5bc568cc-6bcc-4b79-9dbf-bea5528f8171'
